{
  "swagger": "2.0",
  "info": {
    "title": "game/game.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "GameService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/game/rooms": {
      "get": {
        "operationId": "GameService_ListRooms",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gamesListGameRoomsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "GameService"
        ]
      },
      "post": {
        "operationId": "GameService_CreateRoom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gamesCreateGameRoomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gamesCreateGameRoomRequest"
            }
          }
        ],
        "tags": [
          "GameService"
        ]
      }
    },
    "/api/v1/game/rooms/{id}": {
      "delete": {
        "operationId": "GameService_DeleteRoom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gamesDeleteGameRoomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GameService"
        ]
      },
      "post": {
        "operationId": "GameService_StartGame",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gamesStartGameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GameServiceStartGameBody"
            }
          }
        ],
        "tags": [
          "GameService"
        ]
      }
    }
  },
  "definitions": {
    "GameServiceStartGameBody": {
      "type": "object"
    },
    "commonRoom": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "creatorId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "allowedTeams": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "repeated roshan.user.User users = 4;"
        },
        "teamUserMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/commonUserList"
          }
        },
        "kind": {
          "$ref": "#/definitions/commonRoomKind"
        }
      }
    },
    "commonRoomKind": {
      "type": "string",
      "enum": [
        "ROOM_KIND_UNSPECIFIED",
        "ROOM_KIND_CHAT",
        "ROOM_KIND_GAME"
      ],
      "default": "ROOM_KIND_UNSPECIFIED"
    },
    "commonUserList": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/userUser"
          }
        }
      }
    },
    "gamesCreateGameRoomRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/gamesGameKind"
        }
      }
    },
    "gamesCreateGameRoomResponse": {
      "type": "object",
      "properties": {
        "room": {
          "$ref": "#/definitions/commonRoom"
        }
      }
    },
    "gamesDeleteGameRoomResponse": {
      "type": "object",
      "properties": {
        "room": {
          "$ref": "#/definitions/commonRoom"
        }
      }
    },
    "gamesGameKind": {
      "type": "string",
      "enum": [
        "GAME_KIND_UNSPECIFIED",
        "GAME_KIND_TICTACTOE"
      ],
      "default": "GAME_KIND_UNSPECIFIED"
    },
    "gamesListGameRoomsResponse": {
      "type": "object",
      "properties": {
        "rooms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonRoom"
          }
        }
      }
    },
    "gamesStartGameResponse": {
      "type": "object"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "userUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    }
  }
}
