// @generated by protoc-gen-es v2.2.5
// @generated from file game/game.proto (package roshan.games, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Room } from "../common/common_pb";

/**
 * Describes the file game/game.proto.
 */
export declare const file_game_game: GenFile;

/**
 * @generated from message roshan.games.CreateGameRoomRequest
 */
export declare type CreateGameRoomRequest = Message<"roshan.games.CreateGameRoomRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: roshan.games.GameKind kind = 2;
   */
  kind: GameKind;
};

/**
 * Describes the message roshan.games.CreateGameRoomRequest.
 * Use `create(CreateGameRoomRequestSchema)` to create a new message.
 */
export declare const CreateGameRoomRequestSchema: GenMessage<CreateGameRoomRequest>;

/**
 * @generated from message roshan.games.CreateGameRoomResponse
 */
export declare type CreateGameRoomResponse = Message<"roshan.games.CreateGameRoomResponse"> & {
  /**
   * @generated from field: roshan.common.Room room = 1;
   */
  room?: Room;
};

/**
 * Describes the message roshan.games.CreateGameRoomResponse.
 * Use `create(CreateGameRoomResponseSchema)` to create a new message.
 */
export declare const CreateGameRoomResponseSchema: GenMessage<CreateGameRoomResponse>;

/**
 * @generated from message roshan.games.ListGameRoomsRequest
 */
export declare type ListGameRoomsRequest = Message<"roshan.games.ListGameRoomsRequest"> & {
};

/**
 * Describes the message roshan.games.ListGameRoomsRequest.
 * Use `create(ListGameRoomsRequestSchema)` to create a new message.
 */
export declare const ListGameRoomsRequestSchema: GenMessage<ListGameRoomsRequest>;

/**
 * @generated from message roshan.games.ListGameRoomsResponse
 */
export declare type ListGameRoomsResponse = Message<"roshan.games.ListGameRoomsResponse"> & {
  /**
   * @generated from field: repeated roshan.common.Room rooms = 1;
   */
  rooms: Room[];
};

/**
 * Describes the message roshan.games.ListGameRoomsResponse.
 * Use `create(ListGameRoomsResponseSchema)` to create a new message.
 */
export declare const ListGameRoomsResponseSchema: GenMessage<ListGameRoomsResponse>;

/**
 * @generated from message roshan.games.DeleteGameRoomRequest
 */
export declare type DeleteGameRoomRequest = Message<"roshan.games.DeleteGameRoomRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message roshan.games.DeleteGameRoomRequest.
 * Use `create(DeleteGameRoomRequestSchema)` to create a new message.
 */
export declare const DeleteGameRoomRequestSchema: GenMessage<DeleteGameRoomRequest>;

/**
 * @generated from message roshan.games.DeleteGameRoomResponse
 */
export declare type DeleteGameRoomResponse = Message<"roshan.games.DeleteGameRoomResponse"> & {
  /**
   * @generated from field: roshan.common.Room room = 1;
   */
  room?: Room;
};

/**
 * Describes the message roshan.games.DeleteGameRoomResponse.
 * Use `create(DeleteGameRoomResponseSchema)` to create a new message.
 */
export declare const DeleteGameRoomResponseSchema: GenMessage<DeleteGameRoomResponse>;

/**
 * @generated from message roshan.games.StartGameRequest
 */
export declare type StartGameRequest = Message<"roshan.games.StartGameRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message roshan.games.StartGameRequest.
 * Use `create(StartGameRequestSchema)` to create a new message.
 */
export declare const StartGameRequestSchema: GenMessage<StartGameRequest>;

/**
 * @generated from message roshan.games.StartGameResponse
 */
export declare type StartGameResponse = Message<"roshan.games.StartGameResponse"> & {
};

/**
 * Describes the message roshan.games.StartGameResponse.
 * Use `create(StartGameResponseSchema)` to create a new message.
 */
export declare const StartGameResponseSchema: GenMessage<StartGameResponse>;

/**
 * @generated from enum roshan.games.GameKind
 */
export enum GameKind {
  /**
   * @generated from enum value: GAME_KIND_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: GAME_KIND_TICTACTOE = 1;
   */
  TICTACTOE = 1,
}

/**
 * Describes the enum roshan.games.GameKind.
 */
export declare const GameKindSchema: GenEnum<GameKind>;

/**
 * @generated from enum roshan.games.Team
 */
export enum Team {
  /**
   * @generated from enum value: TEAM_UNSPECIFIED = 0;
   */
  TEAM_UNSPECIFIED = 0,

  /**
   * @generated from enum value: TEAM_SPECTATOR = 1;
   */
  TEAM_SPECTATOR = 1,

  /**
   * @generated from enum value: TEAM_1 = 2;
   */
  TEAM_1 = 2,

  /**
   * @generated from enum value: TEAM_2 = 3;
   */
  TEAM_2 = 3,
}

/**
 * Describes the enum roshan.games.Team.
 */
export declare const TeamSchema: GenEnum<Team>;

/**
 * @generated from service roshan.games.GameService
 */
export declare const GameService: GenService<{
  /**
   * @generated from rpc roshan.games.GameService.StartGame
   */
  startGame: {
    methodKind: "unary";
    input: typeof StartGameRequestSchema;
    output: typeof StartGameResponseSchema;
  },
  /**
   * @generated from rpc roshan.games.GameService.CreateRoom
   */
  createRoom: {
    methodKind: "unary";
    input: typeof CreateGameRoomRequestSchema;
    output: typeof CreateGameRoomResponseSchema;
  },
  /**
   * @generated from rpc roshan.games.GameService.ListRooms
   */
  listRooms: {
    methodKind: "unary";
    input: typeof ListGameRoomsRequestSchema;
    output: typeof ListGameRoomsResponseSchema;
  },
  /**
   * @generated from rpc roshan.games.GameService.DeleteRoom
   */
  deleteRoom: {
    methodKind: "unary";
    input: typeof DeleteGameRoomRequestSchema;
    output: typeof DeleteGameRoomResponseSchema;
  },
}>;

