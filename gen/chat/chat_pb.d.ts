// @generated by protoc-gen-es v2.2.5
// @generated from file chat/chat.proto (package roshan.chat, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { User } from "../user/user_pb";

/**
 * Describes the file chat/chat.proto.
 */
export declare const file_chat_chat: GenFile;

/**
 * @generated from message roshan.chat.Room
 */
export declare type Room = Message<"roshan.chat.Room"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string creator_id = 2;
   */
  creatorId: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: repeated roshan.user.User users = 4;
   */
  users: User[];
};

/**
 * Describes the message roshan.chat.Room.
 * Use `create(RoomSchema)` to create a new message.
 */
export declare const RoomSchema: GenMessage<Room>;

/**
 * @generated from message roshan.chat.SendMessageRequest
 */
export declare type SendMessageRequest = Message<"roshan.chat.SendMessageRequest"> & {
  /**
   * @generated from field: string content = 1;
   */
  content: string;

  /**
   * @generated from field: string room_id = 2;
   */
  roomId: string;
};

/**
 * Describes the message roshan.chat.SendMessageRequest.
 * Use `create(SendMessageRequestSchema)` to create a new message.
 */
export declare const SendMessageRequestSchema: GenMessage<SendMessageRequest>;

/**
 * @generated from message roshan.chat.SendMessageResponse
 */
export declare type SendMessageResponse = Message<"roshan.chat.SendMessageResponse"> & {
};

/**
 * Describes the message roshan.chat.SendMessageResponse.
 * Use `create(SendMessageResponseSchema)` to create a new message.
 */
export declare const SendMessageResponseSchema: GenMessage<SendMessageResponse>;

/**
 * @generated from message roshan.chat.CreateRoomRequest
 */
export declare type CreateRoomRequest = Message<"roshan.chat.CreateRoomRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message roshan.chat.CreateRoomRequest.
 * Use `create(CreateRoomRequestSchema)` to create a new message.
 */
export declare const CreateRoomRequestSchema: GenMessage<CreateRoomRequest>;

/**
 * @generated from message roshan.chat.CreateRoomResponse
 */
export declare type CreateRoomResponse = Message<"roshan.chat.CreateRoomResponse"> & {
  /**
   * @generated from field: roshan.chat.Room room = 1;
   */
  room?: Room;
};

/**
 * Describes the message roshan.chat.CreateRoomResponse.
 * Use `create(CreateRoomResponseSchema)` to create a new message.
 */
export declare const CreateRoomResponseSchema: GenMessage<CreateRoomResponse>;

/**
 * @generated from message roshan.chat.ListRoomsRequest
 */
export declare type ListRoomsRequest = Message<"roshan.chat.ListRoomsRequest"> & {
};

/**
 * Describes the message roshan.chat.ListRoomsRequest.
 * Use `create(ListRoomsRequestSchema)` to create a new message.
 */
export declare const ListRoomsRequestSchema: GenMessage<ListRoomsRequest>;

/**
 * @generated from message roshan.chat.ListRoomsResponse
 */
export declare type ListRoomsResponse = Message<"roshan.chat.ListRoomsResponse"> & {
  /**
   * @generated from field: repeated roshan.chat.Room rooms = 1;
   */
  rooms: Room[];
};

/**
 * Describes the message roshan.chat.ListRoomsResponse.
 * Use `create(ListRoomsResponseSchema)` to create a new message.
 */
export declare const ListRoomsResponseSchema: GenMessage<ListRoomsResponse>;

/**
 * @generated from message roshan.chat.DeleteRoomRequest
 */
export declare type DeleteRoomRequest = Message<"roshan.chat.DeleteRoomRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message roshan.chat.DeleteRoomRequest.
 * Use `create(DeleteRoomRequestSchema)` to create a new message.
 */
export declare const DeleteRoomRequestSchema: GenMessage<DeleteRoomRequest>;

/**
 * @generated from message roshan.chat.DeleteRoomResponse
 */
export declare type DeleteRoomResponse = Message<"roshan.chat.DeleteRoomResponse"> & {
  /**
   * @generated from field: roshan.chat.Room room = 1;
   */
  room?: Room;
};

/**
 * Describes the message roshan.chat.DeleteRoomResponse.
 * Use `create(DeleteRoomResponseSchema)` to create a new message.
 */
export declare const DeleteRoomResponseSchema: GenMessage<DeleteRoomResponse>;

/**
 * @generated from service roshan.chat.ChatService
 */
export declare const ChatService: GenService<{
  /**
   * @generated from rpc roshan.chat.ChatService.SendMessage
   */
  sendMessage: {
    methodKind: "unary";
    input: typeof SendMessageRequestSchema;
    output: typeof SendMessageResponseSchema;
  },
  /**
   * @generated from rpc roshan.chat.ChatService.CreateRoom
   */
  createRoom: {
    methodKind: "unary";
    input: typeof CreateRoomRequestSchema;
    output: typeof CreateRoomResponseSchema;
  },
  /**
   * @generated from rpc roshan.chat.ChatService.ListRooms
   */
  listRooms: {
    methodKind: "unary";
    input: typeof ListRoomsRequestSchema;
    output: typeof ListRoomsResponseSchema;
  },
  /**
   * @generated from rpc roshan.chat.ChatService.DeleteRoom
   */
  deleteRoom: {
    methodKind: "unary";
    input: typeof DeleteRoomRequestSchema;
    output: typeof DeleteRoomResponseSchema;
  },
}>;

