// @generated by protoc-gen-es v2.2.5
// @generated from file user/user.proto (package roshan.user, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file user/user.proto.
 */
export declare const file_user_user: GenFile;

/**
 * @generated from message roshan.user.User
 */
export declare type User = Message<"roshan.user.User"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string email = 3;
   */
  email: string;
};

/**
 * Describes the message roshan.user.User.
 * Use `create(UserSchema)` to create a new message.
 */
export declare const UserSchema: GenMessage<User>;

/**
 * @generated from message roshan.user.CreateUserRequest
 */
export declare type CreateUserRequest = Message<"roshan.user.CreateUserRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * @generated from field: string password = 3;
   */
  password: string;
};

/**
 * Describes the message roshan.user.CreateUserRequest.
 * Use `create(CreateUserRequestSchema)` to create a new message.
 */
export declare const CreateUserRequestSchema: GenMessage<CreateUserRequest>;

/**
 * @generated from message roshan.user.CreateUserResponse
 */
export declare type CreateUserResponse = Message<"roshan.user.CreateUserResponse"> & {
  /**
   * @generated from field: roshan.user.User user = 1;
   */
  user?: User;
};

/**
 * Describes the message roshan.user.CreateUserResponse.
 * Use `create(CreateUserResponseSchema)` to create a new message.
 */
export declare const CreateUserResponseSchema: GenMessage<CreateUserResponse>;

/**
 * @generated from message roshan.user.UpdateUserRequest
 */
export declare type UpdateUserRequest = Message<"roshan.user.UpdateUserRequest"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * @generated from field: optional string email = 2;
   */
  email?: string;

  /**
   * @generated from field: optional string password = 3;
   */
  password?: string;
};

/**
 * Describes the message roshan.user.UpdateUserRequest.
 * Use `create(UpdateUserRequestSchema)` to create a new message.
 */
export declare const UpdateUserRequestSchema: GenMessage<UpdateUserRequest>;

/**
 * @generated from message roshan.user.UpdateUserResponse
 */
export declare type UpdateUserResponse = Message<"roshan.user.UpdateUserResponse"> & {
  /**
   * @generated from field: roshan.user.User user = 1;
   */
  user?: User;
};

/**
 * Describes the message roshan.user.UpdateUserResponse.
 * Use `create(UpdateUserResponseSchema)` to create a new message.
 */
export declare const UpdateUserResponseSchema: GenMessage<UpdateUserResponse>;

/**
 * @generated from message roshan.user.DeleteUserRequest
 */
export declare type DeleteUserRequest = Message<"roshan.user.DeleteUserRequest"> & {
};

/**
 * Describes the message roshan.user.DeleteUserRequest.
 * Use `create(DeleteUserRequestSchema)` to create a new message.
 */
export declare const DeleteUserRequestSchema: GenMessage<DeleteUserRequest>;

/**
 * @generated from message roshan.user.DeleteUserResponse
 */
export declare type DeleteUserResponse = Message<"roshan.user.DeleteUserResponse"> & {
  /**
   * @generated from field: roshan.user.User user = 1;
   */
  user?: User;
};

/**
 * Describes the message roshan.user.DeleteUserResponse.
 * Use `create(DeleteUserResponseSchema)` to create a new message.
 */
export declare const DeleteUserResponseSchema: GenMessage<DeleteUserResponse>;

/**
 * @generated from message roshan.user.GetUserRequest
 */
export declare type GetUserRequest = Message<"roshan.user.GetUserRequest"> & {
};

/**
 * Describes the message roshan.user.GetUserRequest.
 * Use `create(GetUserRequestSchema)` to create a new message.
 */
export declare const GetUserRequestSchema: GenMessage<GetUserRequest>;

/**
 * @generated from message roshan.user.GetUserResponse
 */
export declare type GetUserResponse = Message<"roshan.user.GetUserResponse"> & {
  /**
   * @generated from field: roshan.user.User user = 1;
   */
  user?: User;
};

/**
 * Describes the message roshan.user.GetUserResponse.
 * Use `create(GetUserResponseSchema)` to create a new message.
 */
export declare const GetUserResponseSchema: GenMessage<GetUserResponse>;

/**
 * @generated from service roshan.user.UserService
 */
export declare const UserService: GenService<{
  /**
   * @generated from rpc roshan.user.UserService.CreateUser
   */
  createUser: {
    methodKind: "unary";
    input: typeof CreateUserRequestSchema;
    output: typeof CreateUserResponseSchema;
  },
  /**
   * @generated from rpc roshan.user.UserService.UpdateUser
   */
  updateUser: {
    methodKind: "unary";
    input: typeof UpdateUserRequestSchema;
    output: typeof UpdateUserResponseSchema;
  },
  /**
   * @generated from rpc roshan.user.UserService.DeleteUser
   */
  deleteUser: {
    methodKind: "unary";
    input: typeof DeleteUserRequestSchema;
    output: typeof DeleteUserResponseSchema;
  },
  /**
   * @generated from rpc roshan.user.UserService.GetUser
   */
  getUser: {
    methodKind: "unary";
    input: typeof GetUserRequestSchema;
    output: typeof GetUserResponseSchema;
  },
}>;

